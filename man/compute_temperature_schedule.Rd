% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cooling_schedule.R
\name{compute_temperature_schedule}
\alias{compute_temperature_schedule}
\title{Compute Temperature Schedule for Simulated Annealing}
\usage{
compute_temperature_schedule(
  max_iterations,
  max_temperature,
  min_temperature,
  type = "logarithmic"
)
}
\arguments{
\item{max_iterations}{Integer. The maximum number of iterations for the annealing process.}

\item{max_temperature}{Numeric. The starting (maximum) temperature for the cooling schedule.}

\item{min_temperature}{Numeric. The minimum temperature for the cooling schedule.}

\item{type}{Character. The type of cooling schedule to use. Options are "logarithmic", "geometric", or "triangular". Defaults to "logarithmic".}
}
\value{
A numeric vector of length \code{max_iterations} containing the temperature schedule.
}
\description{
This function computes the temperature schedule for simulated annealing based on the specified type of cooling schedule.
}
\details{
The function supports three types of cooling schedules:
\itemize{
\item \code{logarithmic}: The temperature decreases logarithmically, following the formula \code{T(i) = max_temperature / log(i + 1)}.
\item \code{geometric}: The temperature decreases geometrically, following the formula \code{T(i) = max_temperature * alpha^i}, where \code{alpha} is set to 0.95.
\item \code{triangular}: The temperature first decreases linearly to the minimum temperature, then increases back to the maximum temperature, forming a triangular shape.
}
}
\examples{
# Logarithmic cooling schedule
log_schedule <- compute_temperature_schedule(100, 1000, 1, "logarithmic")

# Geometric cooling schedule
geo_schedule <- compute_temperature_schedule(100, 1000, 1, "geometric")

# Triangular cooling schedule
tri_schedule <- compute_temperature_schedule(100, 1000, 1, "triangular")

}
