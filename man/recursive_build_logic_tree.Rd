% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/recursive_build_logic_tree.R
\name{recursive_build_logic_tree}
\alias{recursive_build_logic_tree}
\title{Recursively Build Logic Trees (Greedy Best-First Search)}
\usage{
recursive_build_logic_tree(
  data,
  outcome,
  columns,
  max_operators,
  current_operators = 0,
  parent_scores = list(),
  parent_rules = list(),
  parent_rule_names = list(),
  best_info_env,
  temperatures,
  temp_index_env,
  two_way_logic_roots,
  beam_width,
  max_trees
)
}
\arguments{
\item{data}{A data frame containing the dataset.}

\item{outcome}{A character string specifying the name of the outcome variable.}

\item{columns}{A character vector of feature names to be considered for logical interactions.}

\item{max_operators}{An integer specifying the maximum number of logic operators for the rules.}

\item{current_operators}{An integer specifying the current number of logic operators in the rule (default is 0).}

\item{best_info_env}{An environment containing the best scores, rule paths, and complexities.}

\item{two_way_logic_roots}{A list containing precomputed scores and rules for two-way logic interactions.}

\item{beam_width}{An integer specifying the number of indices to sample (beam width).}

\item{max_trees}{An integer specifying the maximum number of top trees to consider (default is 10).}

\item{parent_score}{A numeric value representing the score of the parent rule (default is 0).}

\item{previous_rule}{A logical vector indicating whether each observation satisfies the previous rule (default is NULL).}

\item{previous_rule_name}{A character string describing the previous rule (default is "").}

\item{external_temperature}{A numeric value for the external temperature, affecting the recursion depth.}
}
\value{
A list containing the tree structure, best scores, and best rule paths.
}
\description{
This function recursively builds logic trees by calculating scores for logical interactions among features and expanding subtrees based on those scores. The function employs a greedy best-first search strategy.
}
\examples{
# Assuming `data`, `columns`, `outcome`, `best_info_env`, and `two_way_logic_roots` are predefined
result <- recursive_build_logic_tree(data, outcome, columns, max_operators = 3, best_info_env = best_info_env, external_temperature = 1.0, two_way_logic_roots = two_way_logic_roots)

}
