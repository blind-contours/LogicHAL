% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compute_two_way_interactions.R
\name{compute_pairwise_logic_interactions_parallel}
\alias{compute_pairwise_logic_interactions_parallel}
\title{Compute Two-Way Interactions in Parallel}
\usage{
compute_pairwise_logic_interactions_parallel(
  data,
  columns,
  outcome,
  num_cores = detectCores() - 1
)
}
\arguments{
\item{data}{A data frame containing the features and the outcome variable.}

\item{columns}{A character vector of feature names to be considered for logical interactions.}

\item{outcome}{A character string specifying the name of the outcome variable.}

\item{num_cores}{Integer. The number of cores to use for parallel processing. Default is one less than the number of available cores.}
}
\value{
A list of results from each core, each containing the computed F1 scores for the two-way interactions.
}
\description{
This function computes two-way logical interactions (AND/OR) among features in parallel
to optimize computational efficiency. The function uses multiple cores to distribute the
computation of F1 scores for all pairwise logical interactions.
}
\examples{
# Assuming 'df' is your data frame and 'outcome' is the name of your outcome variable
columns <- colnames(df)[grep("^KRFP", colnames(df))]
results <- compute_two_way_interactions(df, columns, "outcome", num_cores = 4)

}
