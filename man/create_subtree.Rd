% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utlis.R
\name{create_subtree}
\alias{create_subtree}
\title{Create Subtrees Based on Scores and Rules}
\usage{
create_subtree(
  scores,
  rules,
  parent_score,
  parent_rule,
  parent_rule_name,
  internal_temperature,
  external_temperature,
  data,
  outcome,
  columns,
  max_operators,
  current_operators,
  best_info_env,
  two_way_logic_roots,
  beam_width,
  max_trees
)
}
\arguments{
\item{scores}{A numeric vector of scores for the current rules.}

\item{rules}{A character vector of rule descriptions corresponding to the scores.}

\item{parent_score}{A numeric value representing the score of the parent rule.}

\item{parent_rule}{A logical vector indicating whether each observation satisfies the parent rule.}

\item{parent_rule_name}{A character string describing the parent rule.}

\item{internal_temperature}{A numeric value for the internal temperature used in the Boltzmann distribution.}

\item{external_temperature}{A numeric value for the external temperature, affecting the recursion depth.}

\item{data}{A data frame containing the dataset.}

\item{outcome}{A character string specifying the name of the outcome variable.}

\item{columns}{A character vector of feature names to be considered for logical interactions.}

\item{max_operators}{An integer specifying the maximum number of logic operators for the rules.}

\item{current_operators}{An integer specifying the current number of logic operators in the rule.}

\item{best_info_env}{An environment containing the best scores, rule paths, and complexities.}

\item{two_way_logic_roots}{A list containing precomputed scores and rules for two-way logic interactions.}

\item{beam_width}{An integer specifying the number of indices to sample (beam width).}
}
\value{
A list of subtrees created based on the selected rules and their scores.
}
\description{
This function creates subtrees by selecting rules based on their scores using a Boltzmann distribution.
It normalizes the scores, calculates selection probabilities, and selects indices to form subtrees.
The selected rules are then used to recursively build logic trees.
}
\examples{
# Assuming `data`, `columns`, `outcome`, `best_info_env`, and `two_way_logic_roots` are predefined
scores <- c(0.8, 0.75, 0.7)
rules <- c("rule1", "rule2", "rule3")
parent_score <- 0.85
parent_rule <- rep(TRUE, nrow(data))
parent_rule_name <- "parent_rule"
internal_temperature <- 1.0
external_temperature <- 1.0
max_operators <- 3
current_operators <- 0
beam_width <- 3

subtrees <- create_subtree(scores, rules, parent_score, parent_rule, parent_rule_name, internal_temperature, external_temperature, data, outcome, columns, max_operators, current_operators, best_info_env, two_way_logic_roots, beam_width)

}
