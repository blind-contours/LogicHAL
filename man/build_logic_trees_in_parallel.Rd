% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/build_logic_trees_in_parallel.R
\name{build_logic_trees_in_parallel}
\alias{build_logic_trees_in_parallel}
\title{Build Logic Trees in Parallel}
\usage{
build_logic_trees_in_parallel(
  data,
  outcome,
  columns,
  max_operators,
  max_trees,
  max_temperature,
  min_temperature,
  max_iterations,
  no_improvement_threshold,
  num_cores,
  two_way_logic_roots,
  beam_width
)
}
\arguments{
\item{data}{Data frame. The dataset to be used for building the logic trees.}

\item{outcome}{Character. The name of the outcome variable.}

\item{columns}{Character vector. The names of the columns to be used for building the logic rules.}

\item{max_operators}{Integer. The maximum depth of the logic trees based on logical operators. Default is 3.}

\item{max_trees}{Integer. The maximum number of top trees to retain. Default is 5.}

\item{min_temperature}{Numeric. The minimum temperature for the simulated annealing process. Default is 0.001.}

\item{max_iterations}{Integer. The maximum number of iterations to run the logic tree building process. Default is 1000.}

\item{no_improvement_threshold}{Integer. The number of iterations without improvement before stopping. Default is 100.}

\item{num_cores}{Integer. The number of cores to use for parallel processing. Default is \code{detectCores() - 1}.}

\item{initial_temperature}{Numeric. The initial temperature for the simulated annealing process. Default is 1.}
}
\value{
Data frame. A data frame containing the best scores, rule paths, and complexities of the top logic trees.
}
\description{
This function executes the logic tree building process in parallel across
multiple cores, combining results from each core to find the best
logic trees.
}
\examples{
data <- data.frame(x1 = rnorm(100), x2 = rnorm(100), y = sample(0:1, 100, replace = TRUE))
build_logic_trees_in_parallel(data, outcome = "y", columns = c("x1", "x2"), max_operators = 3, max_trees = 5)
}
